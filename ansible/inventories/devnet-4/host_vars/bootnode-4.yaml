ethereum_bootnodes_enr:
  - "{{ hostvars['bootnode-1']['cl_bootnode_fact_enr'] }}"
  - "{{ hostvars['bootnode-1']['ethereum_node_fact_cl_enr'] }}"
  - "{{ hostvars['bootnode-2']['ethereum_node_fact_cl_enr'] }}"
  - "{{ hostvars['bootnode-3']['ethereum_node_fact_cl_enr'] }}"
  - "{{ hostvars['bootnode-4']['ethereum_node_fact_cl_enr'] }}"
  - "{{ hostvars['bootnode-5']['ethereum_node_fact_cl_enr'] }}"
  - "{{ hostvars['bootnode-6']['ethereum_node_fact_cl_enr'] }}"
  - "{{ hostvars['bootnode-7']['ethereum_node_fact_cl_enr'] }}"
  - "{{ hostvars['bootnode-8']['ethereum_node_fact_cl_enr'] }}"

ethereum_bootnodes_enode:
  - "{{ hostvars['bootnode-1']['ethereum_node_fact_el_enode'] }}"
  - "{{ hostvars['bootnode-2']['ethereum_node_fact_el_enode'] }}"
  - "{{ hostvars['bootnode-3']['ethereum_node_fact_el_enode'] }}"
  - "{{ hostvars['bootnode-4']['ethereum_node_fact_el_enode'] }}"
  - "{{ hostvars['bootnode-5']['ethereum_node_fact_el_enode'] }}"
  - "{{ hostvars['bootnode-6']['ethereum_node_fact_el_enode'] }}"

# role: eth_inventory_web
eth_inventory_web_container_networks: "{{ docker_networks_shared }}"
eth_inventory_web_container_env:
  VIRTUAL_HOST: "{{ server_fqdn }}"
  VIRTUAL_PORT: "80"
  VIRTUAL_PATH: "/meta/api"
  VIRTUAL_DEST: "/"
  LETSENCRYPT_HOST: "{{ server_fqdn }}"
ethereum_node_xatu_sentry_enabled: true
# role: ethpandaops.general.ethereum_node
ethereum_node_el: geth
ethereum_node_cl: prysm
ethereum_node_cl_validator_enabled: false


# role: ethpandaops.general.bootstrap
bootstrap_default_user_authorized_keys_github_team_cl:
  - kasey
  - terencechain
  - potuz
  - nisdas
  - prestonvanloon
  - rkapka
  - nalepae
  - james-prysm
ethereum_node_skip_cleanup: false
# role: ethpandaops.general.ethereum_node
prysm_container_tty: true
# role: ethpandaops.general.prysm
prysm_container_name: beacon
prysm_validator_container_name: validator
prysm_container_image: "{{ default_ethereum_client_images.prysm }}"
prysm_container_env:
  VIRTUAL_HOST: "{{ ethereum_node_beacon_hostname }}"
  VIRTUAL_PORT: "{{ ethereum_node_cl_ports_http_beacon | string }}"
  LETSENCRYPT_HOST: "{{ ethereum_node_beacon_hostname }}"
prysm_container_volumes:
  - "{{ prysm_datadir }}:/data"
  - "{{ prysm_auth_jwt_path }}:/execution-auth.jwt:ro"
  - "{{ eth_testnet_config_dir }}:/network-config:ro"
prysm_container_entrypoint:
  - /app/cmd/beacon-chain/beacon-chain
prysm_container_command_extra_args: >-
  {{ prysm_container_command_extra_simple_args + prysm_container_command_extra_bootnode_args }}
prysm_container_command_extra_simple_args:
  - --grpc-gateway-corsdomain=*
  - --chain-config-file=/network-config/config.yaml
  - --genesis-state=/network-config/genesis.ssz
  - --contract-deployment-block={{ ethereum_network_deposit_contract_block }}
  - --min-sync-peers=1
  - --pprof
  - --enable-debug-rpc-endpoints
  - --verbosity=debug
  - --p2p-max-peers=500
prysm_container_command_extra_bootnode_args: >-
  {{ ethereum_bootnodes_enr | map('regex_replace', '^', '--bootstrap-node=') | list }}

# role: ethpandaops.general.geth
geth_container_name: execution
geth_container_image: "{{ default_ethereum_client_images.geth }}"
geth_container_env:
  VIRTUAL_HOST: "{{ ethereum_node_rcp_hostname }}"
  VIRTUAL_PORT: "{{ ethereum_node_el_ports_http_rpc | string }}"
  LETSENCRYPT_HOST: "{{ ethereum_node_rcp_hostname }}"
geth_container_command_extra_args:
  - --http.api=eth,net,web3,debug,admin
  - --http.vhosts=*
  - --networkid={{ ethereum_network_id }}
  - --syncmode=full
  - --gcmode=archive
  - --state.scheme=hash
  - --miner.gaslimit=100000000
  - --bootnodes={{ ethereum_bootnodes_enode | join(',') }}
  - --maxpeers=500
geth_init_custom_network: true
geth_init_custom_network_genesis_file: "{{ eth_testnet_config_dir }}/genesis.json"
geth_container_pull: true

geth_init_custom_network_container_command:
  - --datadir=/data
  - init
  - --state.scheme=hash
  - /genesis.json

# role: ethpandaops.general.prometheus
prometheus_remote_push_url: https://victoriametrics-public.analytics.production.platform.ethpandaops.io/insert/1/prometheus
prometheus_remote_write_username: "{{ secret_prometheus_remote_write.username }}"
prometheus_remote_write_password: "{{ secret_prometheus_remote_write.password }}"
prometheus_config: |
  global:
    scrape_interval: 30s
    evaluation_interval: 30s
    scrape_timeout: 10s
    external_labels:
      instance: "{{ inventory_hostname }}"
      ip_address: "{{ ansible_host }}"
      network: "{{ ethereum_network_name }}"
      testnet: "{{ ethereum_network_name }}"
      execution_client: "{{ ethereum_node_el }}"
      consensus_client: "{{ ethereum_node_cl }}"
  remote_write:
    - queue_config:
        batch_send_deadline: 5s
        max_backoff: 500ms
        max_samples_per_send: 500
        min_backoff: 50ms
        max_shards: 100
      url: {{ prometheus_remote_push_url }}
      remote_timeout: 10s
      basic_auth:
        username: {{ prometheus_remote_write_username }}
        password: {{ prometheus_remote_write_password }}
  scrape_configs:
    - job_name: "prometheus"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["localhost:9090"]
          labels:
            instance: "{{ inventory_hostname }}"
    - job_name: "node"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["172.17.0.1:9100"]
          labels:
            instance: "{{ inventory_hostname }}"
    - job_name: "exporter"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["ethereum-metrics-exporter:9090"]
          labels:
            instance: "{{ inventory_hostname }}"
    - job_name: "consensus_node"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["{{ vars[ethereum_node_cl + '_container_name'] }}:{{ ethereum_node_cl_ports_metrics }}"]
          labels:
            instance: "{{ inventory_hostname }}"
